name: Pull Request Checks

on: pull_request
jobs:

  branch-name-check:
    name: Enforce Branch Name Convention
    runs-on: ubuntu-latest
    steps:
      - name: Validate Branch Name
        run: |
          #BRANCH_NAME="${GITHUB_HEAD_REF}"
          BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}"
          echo "Validating branch name: $BRANCH_NAME"

          if [[ "$BRANCH_NAME" =~ ^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test|sample|security|config|bugfix|hotfix)-[a-zA-Z0-9._/-]+$ ]] || [[ "$BRANCH_NAME" == "master" ]]; then
            echo "✅ Branch name is valid"
          else
            echo "❌ Invalid branch name: $BRANCH_NAME"
            echo "Branch names must follow one of the allowed prefixes:"
            echo "   build-*, feat-*, fix-*, bugfix-*, hotfix-*, build-*, chore-*, ci-*, docs-*, perf-*, refactor-*, revert-*, style-*, test-*, sample-*, security-*, config-*, bugfix-*, hotfix-*"
            exit 1
          fi

  # qqqq repo will need branch protection rules and PR Template
  commitlint:
    name: commitlint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5
        with:
          configFile: .commitlintrc.json
        
        # built in to our organisation anyway
  # gitguardian-scan:
    # name: gitguardian
    # runs-on: ubuntu-latest
    # #if: success() || failure()
    # steps:
      # - uses: actions/checkout@v3

      # - name: GitGuardian Scan
        # uses: GitGuardian/gg-shield-action@v1
        # env:
          # GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY  }}
        # #continue-on-error: true # we dont want secrets going further and the keys need to be changed if this is triggered

  Unit-Tests:
      name: todo unit tests
      runs-on: ubuntu-latest
      steps:
        - name: See other project pipeline for Tests
          run: echo " See other project pipeline for Tests this is a placeholder"
          
  
  E2E-Tests:
      name: todo e2e tests
      runs-on: ubuntu-latest
      steps:
        - name: See other project pipeline for Tests
          run: echo " See other project pipeline for Tests this is a placeholder"

          
  Code-Coverage:
      name: code coverage
      runs-on: ubuntu-latest
      steps:
        - name: Code Coverage
          run: echo "TODO Code Coverage"

  # All-Checks-Passed:
    # name: all checks passed
    # runs-on: ubuntu-latest
    # needs:
      # - branch-name-check
      # - commitlint
      # - gitguardian-scan
      # - Unit-Tests
      # - E2E-Tests
      # - Code-Coverage
    # #if: ${{ success() }}
    # steps:
     # - name: all checks passed steps
       # run: echo "allow all checks to run incase multiple fails then fail here"
       
# wanted to do it like this it worked neither is putting check in pr git ui but is running in pipeline
 # Code-Coverage:
  #    name: code coverage
  #    runs-on: ubuntu-latest
      #if: success() || failure()
  #    steps:
   #     - name: Code Coverage
  #        run: echo "TODO Code Coverage"
          #continue-on-error: true
